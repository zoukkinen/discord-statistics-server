name: 🚀 Deploy to Heroku

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Test job - runs on all pushes and PRs
  test:
    name: 🧪 Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔨 Build application
      run: npm run build

    - name: ✅ Run tests (if any)
      run: npm test --if-present

    - name: 🔍 Lint code
      run: npm run lint --if-present

  # Deploy job - only runs on main branch pushes
  deploy:
    name: 🚀 Deploy to Heroku
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: � Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        
    - name: 🔐 Login to Heroku Container Registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com

    - name: 🐳 Build and push Docker image
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      run: |
        docker build -t registry.heroku.com/$HEROKU_APP_NAME/web .
        docker push registry.heroku.com/$HEROKU_APP_NAME/web

    - name: 🚀 Release to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      run: |
        echo "🚀 Releasing to Heroku..."
        timeout 300 heroku container:release web --app $HEROKU_APP_NAME || {
          echo "⚠️  Release command timed out or failed"
          echo "🔍 Checking release status..."
          heroku releases --app $HEROKU_APP_NAME --num 5
          exit 1
        }

    - name: 🏥 Health Check
      run: |
        echo "🔍 Waiting for application to start..."
        sleep 60
        echo "🔍 Checking application health..."
        
        MAX_ATTEMPTS=5
        ATTEMPT=1
        
        while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
          echo "⏳ Health check attempt $ATTEMPT of $MAX_ATTEMPTS..."
          
          if curl -f --max-time 30 --connect-timeout 10 https://assembly.zoukkinen.com/api/health; then
            echo "✅ Application is healthy!"
            break
          else
            echo "❌ Attempt $ATTEMPT failed"
            
            if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
              echo "💥 Health check failed after $MAX_ATTEMPTS attempts"
              echo "🔍 Checking if app is at least responding..."
              curl -I --max-time 10 https://assembly.zoukkinen.com/ || true
              echo "⚠️  Deployment completed but health check failed - manual verification needed"
              exit 0  # Don't fail the deployment, just warn
            else
              echo "⏳ Waiting 30 seconds before retry..."
              sleep 30
            fi
          fi
          
          ATTEMPT=$((ATTEMPT + 1))
        done

    - name: 📊 Post-deployment notification
      if: success()
      run: |
        echo "🎉 Deployment successful!"
        echo "🌐 Application URL: https://assembly.zoukkinen.com"
        echo "📊 Dashboard: https://assembly.zoukkinen.com"

  # Notification job for deployment status
  notify:
    name: 📢 Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📢 Deployment Success Notification
      if: needs.deploy.result == 'success'
      run: |
        echo "🎉 Assembly Discord Tracker deployed successfully!"
        echo "🌐 Live at: https://assembly.zoukkinen.com"
        
    - name: 📢 Deployment Failure Notification
      if: needs.deploy.result == 'failure'
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs and try again."
        exit 1
