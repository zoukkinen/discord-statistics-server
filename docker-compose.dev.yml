services:
  # PostgreSQL database for development (matching Heroku version)
  postgres-dev:
    image: postgres:17-alpine
    container_name: assembly-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=discord_stats
      - POSTGRES_USER=discord_bot
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U discord_bot -d discord_stats"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - discord-tracker

  # Development backend service with hot reload
  discord-bot-dev:
    build: 
      context: .
      dockerfile: Dockerfile.dev
      # Single platform build for faster development
    container_name: assembly-discord-tracker-dev
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-3000}:3000"
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - WEB_PORT=3000
      - DATABASE_TYPE=postgresql
      - DATABASE_URL=postgresql://discord_bot:dev_password@postgres-dev:5432/discord_stats
      - DB_HOST=postgres-dev
      - DB_PORT=5432
      - DB_NAME=discord_stats
      - DB_USER=discord_bot
      - DB_PASSWORD=dev_password
      - NODE_ENV=development
      - EVENT_NAME=${EVENT_NAME:-Assembly Summer 2025}
      - EVENT_START_DATE=${EVENT_START_DATE:-2025-07-31T00:00:00+03:00}
      - EVENT_END_DATE=${EVENT_END_DATE:-2025-08-03T23:59:59+03:00}
      - EVENT_TIMEZONE=${EVENT_TIMEZONE:-Europe/Helsinki}
      - EVENT_DESCRIPTION=${EVENT_DESCRIPTION:-Discord activity tracking for Assembly Summer 2025}
    volumes:
      - discord_data:/app/data
      # Mount source code for hot reload
      - ./src:/app/src
      - ./tsconfig.json:/app/tsconfig.json
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    command: npm run dev:server
    networks:
      - discord-tracker
    depends_on:
      postgres-dev:
        condition: service_healthy
      frontend-dev:
        condition: service_started

  # Development frontend service with Vite HMR
  frontend-dev:
    build: 
      context: .
      dockerfile: Dockerfile.frontend-dev
      # Single platform build for faster development
    container_name: assembly-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
      - DOCKER_ENV=true
    volumes:
      # Mount frontend source code for hot reload
      - ./frontend:/app/frontend
      - ./vite.config.ts:/app/vite.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      # Node modules volume for better performance
      - frontend_node_modules:/app/node_modules
    command: npm run dev:client
    networks:
      - discord-tracker

volumes:
  discord_data:
    driver: local
  postgres_data:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  discord-tracker:
    driver: bridge
